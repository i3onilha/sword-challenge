// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0

package tasks

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type UsersRole string

const (
	UsersRoleManager    UsersRole = "manager"
	UsersRoleTechnician UsersRole = "technician"
)

func (e *UsersRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UsersRole(s)
	case string:
		*e = UsersRole(s)
	default:
		return fmt.Errorf("unsupported scan type for UsersRole: %T", src)
	}
	return nil
}

type NullUsersRole struct {
	UsersRole UsersRole
	Valid     bool // Valid is true if UsersRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUsersRole) Scan(value interface{}) error {
	if value == nil {
		ns.UsersRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UsersRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUsersRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UsersRole), nil
}

type Task struct {
	ID           int64
	TechnicianID int64
	Title        string
	Summary      string
	PerformedAt  time.Time
	CreatedAt    sql.NullTime
	UpdatedAt    sql.NullTime
}

type User struct {
	ID           int64
	Name         string
	Email        string
	PasswordHash string
	Role         UsersRole
	CreatedAt    sql.NullTime
	UpdatedAt    sql.NullTime
}
