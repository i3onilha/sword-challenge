services:
  app-prod:
    build:
      dockerfile: Dockerfile
      context: .
      target: production
    ports:
      - 3000:3000
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - RABBITMQ_URL=${RABBITMQ_URL}
  app-dev:
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    volumes:
      - .:/home/go/sourcecode
      - ~/.ssh:/home/go/.ssh:ro
    depends_on:
      mysql-service:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - backend
    ports:
      - 6767:6767
      - 6464:6464
      - 3000:3000
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - RABBITMQ_URL=${RABBITMQ_URL}
    command: godoc -http=:6464
  mysql-service:
    image: mysql:8.0
    container_name: mysql-service
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
      - ./databases/sql/mysql/schema:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    networks:
      - backend
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    platform: linux/amd64
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - backend
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql-data:
  rabbitmq-data:

networks:
  backend:
    driver: bridge
